{{- $fullname := include "zookeeper.fullname" . -}}
{{- $name := include "zookeeper.name" . -}}
{{- $chart := include "zookeeper.chart" . -}}
{{- $root := . }}
*** Use Zookeeper from a container running on the host ***

{{ range .Values.nodes }}
Select Zookeeper node {{ .id }} by running these commands:

  export ZOOKEEPER_PORT=$(kubectl -n {{ $root.Release.Namespace | default "default" }} get services -l server={{ $name }}-1,external=true -o jsonpath="{.items[0].spec.ports[0].nodePort}")
  export NODE_IP=$(kubectl -n {{ $root.Release.Namespace | default "default" }} get nodes -l zone={{ .zone }} -o jsonpath="{.items[0].status.addresses[0].address}")

Connect to Zookeeper by running this command:

  docker run --rm -it {{ $root.Values.image.registry }}{{ $root.Values.image.repository }}:{{ $root.Values.image.tag }} zkCli.sh -server $NODE_IP:$ZOOKEEPER_PORT
{{ end }}

*** Use Zookeeper from a pod running on the cluster ***

Connect to Zookeeper by running this command:

  kubectl -n {{ $root.Release.Namespace | default "default" }} run test --rm -it --restart=Never --image={{ $root.Values.image.registry }}{{ $root.Values.image.repository }}:{{ $root.Values.image.tag }} -- zkCli.sh -server {{ $name }}-headless:2181


*** Retrieve logs from the nodes ***

Tail the logs of Zookeeper nodes by running this command:

  kubectl -n {{ $root.Release.Namespace | default "default" }} logs -f -l app={{ $name }}

{{ range .Values.nodes }}
Tail the logs of Zookeeper node {{ .id }} by running this command:

  kubectl -n {{ $root.Release.Namespace | default "default" }} logs -f -l server={{ $name }}-{{ .id }}
{{ end }}
